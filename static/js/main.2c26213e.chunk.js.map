{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Math","floor","random","bg","d","Date","weather","setWeather","querry","setQuerry","enterPressed","setenterPressed","newTime","toLocaleTimeString","ctime","setCtime","setInterval","newCTime","className","getDay","getMonth","getFullYear","onChange","e","target","value","placeholder","onKeyPress","code","fetch","then","response","json","data","weatherHandler","Object","entries","length","name","sys","country","main","alt","src","icon","description","round","temp","feels_like","temp_min","coord","lon","lat","visibility","wind","speed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c26213e.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\n\n\n\nfunction App() {\n  const [bg] = useState('bg bg' +(Math.floor(Math.random()*5)+1));\n  \n  /*const api = {\n    key: '3dd7824a049a021a9d9f12888b3fd4ce',\n    base: 'https://api.openweathermap.org/data/2.5'\n  }*/\n  let d = new Date();\n  let daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const [weather, setWeather] = useState({});\n  const [querry, setQuerry] = useState('');\n  const [enterPressed, setenterPressed] = useState(0);\n  const weatherHandler = (querry) => {\n    fetch('http://api.openweathermap.org/data/2.5/weather?units=metric&&q=' + querry + '&appid=3dd7824a049a021a9d9f12888b3fd4ce')\n      .then(response => response.json())\n      .then(data => setWeather(data));\n    setQuerry('');\n    \n  }\n\n\n\n  let newTime = new Date().toLocaleTimeString();\n  const [ctime, setCtime] = useState(newTime);\n  const UdateTime = () => {\n    let newCTime = new Date().toLocaleTimeString();\n    setCtime(newCTime);\n  };\n  setInterval(UdateTime, 1000);\n\n \n  return (\n    <div className={bg}>\n      <div className = \"App\">\n        <div className = 'startScreen'></div>\n      <div className=\"container \">\n\n\n        <div className=\"row \">\n          <div className=\"col-md-3 d-flex \">\n            <div className='container dateTime my-5 d-flex flex-column justify-content-center'>\n              <div className=' time'>{ctime}</div>\n              <div className=' date'>{d.getDay()}/{d.getMonth()}/{d.getFullYear()}</div>\n            </div>\n          </div>\n          <div className=\"col-md-6  \">\n\n            <div className=\"container my-3\">\n              <input\n                className=\"form-control  text-light search\"\n                onChange = {(e)=>{setQuerry(e.target.value)}}\n                value = {querry}\n                placeholder='Search...'\n                onKeyPress={(e) => {\n                  if (e.code === 'Enter' && querry !== '') {\n                  \n\n                    setenterPressed(1);\n                  weatherHandler(querry);   \n                  \n                }\n                }\n                }>\n\n\n              </input>\n            </div>\n                {Object.entries(weather).length !== 0 &&  weather.weather?\n                \n\n                \n            \n            <div className=\"weather container d-flex  justify-content-center flex-column \">\n              <div className=\"container weatherHolder d-flex flex-column justify-content-center\">\n                <div className=\"container-fluid my-1 py-3 location\">\n                  {weather.name},{weather.sys.country}\n                  <div className=\"container-fluid day\">{daysInWeek[d.getDay()]}</div>\n                </div>\n\n\n                <div className=\"container-fluid my-5 temp\">\n                  <div className=\"container-fluid  weatherCondition\">\n                  {weather.weather[0].main}\n                  <img alt = \"icon\" src = {'http://openweathermap.org/img/w/'+weather.weather[0].icon+'.png'}/><br/>\n                  <p>{weather.weather[0].description}</p></div>\n                  <b>{Math.round(weather.main.temp)} &#xb0;C</b>  \n                </div>\n                <div className =\"row\">\n                    <div className = \"col\">Feels like: {Math.round(weather.main.feels_like)}&#xb0;C</div>\n                    <div className = \"col\">Min temp: {Math.round(weather.main.temp_min)}&#xb0;C</div>\n                  </div>\n              </div>\n            </div>\n            : <div className = 'container text-danger'>{enterPressed === 0?'':'No results'}</div>\n            }\n\n\n          </div>\n          {Object.entries(weather).length !== 0 && weather.weather?\n          \n          <div className=\"col-md-3 d-flex align-items-center\" >\n            <div className=\"container weatherDetail d-flex flex-column justify-content-center\">\n              <div className=\"container-fluid my-4\">Lon: {weather.coord.lon}&#xb0;</div>\n              <div className=\"container-fluid my-4\">Lat: {weather.coord.lat}&#xb0;</div>\n              <div className=\"container-fluid my-4\">Visibility: {weather.visibility}m</div>\n              <div className=\"container-fluid my-4\">Wind speed: {weather.wind.speed} ms<sup>-1</sup></div>\n\n            </div>\n          </div>\n          \n          :''}\n        </div>\n      </div>\n      </div>\n\n\n\n\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}